generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int        @id @default(autoincrement())
  name           String
  email          String     @unique
  password       String
  role           String     @default("USER")
  profilePicture String?
  address        String?
  refreshToken   String?
  createdAt      DateTime   @default(now())
  reviews        Review[]
  wishlist       Wishlist[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  imageUrl String?
  products Product[]
}

model Product {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  price       Float
  image       String?
  categoryId  Int
  stock       Int?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  category    Category   @relation(fields: [categoryId], references: [id])
  reviews     Review[]
  wishlists   Wishlist[]
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String?
  status    String   @default("approved")
  productId Int
  userId    Int
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Wishlist {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, productId])
}

model HeroImage {
  id        String   @id @default(uuid())
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Article {
  id            Int      @id @default(autoincrement())
  title         String
  content       String
  author        String?
  published     Boolean  @default(false)
  featuredImage String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
